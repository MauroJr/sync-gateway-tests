---
# Provision server_vms
- hosts: cb_pool
  vars:

    couchbase_server_package_base_url:
    couchbase_server_package_name:
    couchbase_server_package_url: "{{ couchbase_server_package_base_url }}/{{ couchbase_server_package_name }}"

    couchbase_server_admin: Administrator
    couchbase_server_password: password
    couchbase_server_ram: "{{ ansible_memtotal_mb|int }}"
    couchbase_server_admin_port: 8091
    couchbase_server_home_path: /opt/couchbase

    # Server node is the first ip in the list for now
    couchbase_server_node: "{{ ansible_all_ipv4_addresses[0] }}"
    couchbase_server_primary_node: "{{ couchbase_server_node }}"
    couchbase_server_bucket_name: db
    couchbase_server_bucket_name2: bucket-1
    couchbase_server_bucket_name3: bucket-2
    couchbase_server_bucket_type: couchbase
    couchbase_server_bucket_ram: 128
    couchbase_server_bucket_port: 11211
    couchbase_server_bucket_replica: 1

  remote_user: root
  sudo: yes

  tasks:
  # Stop and delete any existing server service
  - name: Print IP
    debug: msg="Server node={{ couchbase_server_node }}"
  - name: Stop Couchbase Service
    service: name=couchbase-server state=stopped
    ignore_errors: yes
  - name: Uninstall couchbase server
    shell: rpm -e couchbase-server
    ignore_errors: yes
  - name: Remove couchbase server downloads
    shell: rm -rf /tmp/*
  - name: Remove all couchbase server residue
    shell: rm -rf /opt/couchbase

  # Download, install, and start server
  - name: downloading couchbase server package
    debug: msg="Downloading package {{ couchbase_server_package_url }}"
  - name: Download couchbase server
    get_url: url={{ couchbase_server_package_url }} dest=/tmp/{{ couchbase_server_package_name }}
  - name: Install Couchbase Server
    yum: name=/tmp/{{ couchbase_server_package_name }} state=present
#  - name: raise max file descriptors
#    copy: src=files/security-nofiles-limit.conf dest=/etc/security/limits.d/20-nofiles.conf owner=root group=root mode=0644
#  - name: Disable Transparent Huge Pages
#    shell: echo 'for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done' >> /etc/rc.local
#    shell: echo 'for i in /sys/kernel/mm/*transparent_hugepage/defrag; do echo never > $i; done' >> /etc/rc.local
#    shell: for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done
  - name: Start Couchbase Service
    service: name=couchbase-server state=started

  # Configure server
  - name: Get major version
    shell: cat /opt/couchbase/VERSION.txt | cut -d '.' -f1
    register: cb_major_version

  - name: Wait for node to be listening on port 8091
    wait_for: port=8091 delay=5

  - name: Configure cluster settings
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --cluster-init-password={{ couchbase_server_password }} --cluster-init-port={{couchbase_server_admin_port}} --cluster-init-ramsize={{ ((couchbase_server_ram|int)*0.8)|int }}"

  - name: Initialize primary node
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli node-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --node-init-hostname={{ couchbase_server_node }}"
    when: "{{ cb_major_version['stdout'] }} != 2"

  - name: Wait for node to be listening on port 8091
    wait_for: port=8091 delay=5

# Multiple nodes
#  - name: Join additional cluster nodes
#    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli server-add -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --server-add={{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --server-add-username={{ couchbase_server_admin }} --server-add-password={{ couchbase_server_password }}"
#    when: not (couchbase_server_node == couchbase_server_primary_node )

  - name: Rebalance cluster
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli rebalance -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }}"
    ignore_errors: yes

  - name: Create new db bucket
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli bucket-create -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --bucket={{ couchbase_server_bucket_name }} --bucket-type={{ couchbase_server_bucket_type }} --bucket-port={{ couchbase_server_bucket_port }} --bucket-ramsize={{ couchbase_server_bucket_ram }} --bucket-replica={{ couchbase_server_bucket_replica }}"
    when: couchbase_server_node == couchbase_server_primary_node

  - name: Create new bucket-1 bucket
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli bucket-create -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --bucket={{ couchbase_server_bucket_name2 }} --enable-flush=1 --bucket-type={{ couchbase_server_bucket_type }} --bucket-port={{ couchbase_server_bucket_port }} --bucket-ramsize={{(((couchbase_server_ram|int)*0.8 - couchbase_server_bucket_ram|int)*0.75)|int}} --bucket-replica={{ couchbase_server_bucket_replica }}"
    when: couchbase_server_node == couchbase_server_primary_node

  - name: Create new bucket-2 bucket
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli bucket-create -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --bucket={{ couchbase_server_bucket_name3 }} --enable-flush=1 --bucket-type={{ couchbase_server_bucket_type }} --bucket-port={{ couchbase_server_bucket_port }} --bucket-ramsize={{(((couchbase_server_ram|int)*0.8 - couchbase_server_bucket_ram|int)*0.25)|int }} --bucket-replica={{ couchbase_server_bucket_replica }}"
    when: couchbase_server_node == couchbase_server_primary_node

